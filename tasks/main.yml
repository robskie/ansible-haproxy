---
- name: Include installation tasks (Debian)
  include: install-debian.yml
  when: ansible_distribution == 'Debian'
  tags: haproxy, install, haproxy:install

- name: Include installation tasks (Ubuntu)
  include: install-ubuntu.yml
  when: ansible_distribution == 'Ubuntu'
  tags: haproxy, install, haproxy:install

- name: Create config directory
  file:
    path: "{{ haproxy_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags: haproxy, install, haproxy:install

- name: List files in config directory
  command: "ls -1 {{ haproxy_config_dir }}"
  register: confdir
  changed_when: false
  tags: haproxy, configure, haproxy:configure

- name: Delete old config files
  file: path={{ item }} state=absent
  with_items: >-
    {%- set comma = joiner(",") -%}
    [{% for file in confdir.stdout_lines %}
      {%- set confname = file[3:-4] -%}
      {%- if file.split('.')[-1] != 'cfg' -%}
      {%- set confname = file -%}
      {%- endif -%}
      {%- if confname != "main" %}
      {%- if confname not in haproxy_backends|map(attribute='name') %}
      {%- if confname not in haproxy_frontends|map(attribute='name') %}
        {{ comma() }}"{{ haproxy_config_dir+file }}"
      {%- endif %}
      {%- endif %}
      {%- endif %}
    {%- endfor %}]
  when: haproxy_clear_config == true
  tags: haproxy, configure, haproxy:configure

- name: Copy default/global config file
  copy:
    src: "{{ haproxy_config_file }}"
    dest: "{{ haproxy_config_dir }}00-main.cfg"
    owner: root
    group: root
    mode: 0644
  tags: haproxy, configure, haproxy:configure

- name: Create frontend fragment directories
  file:
    path: "{{ haproxy_config_dir }}{{ item.name }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items: "{{ haproxy_frontends }}"
  tags: haproxy, configure, haproxy:configure

- name: Create frontend fragments (main)
  template:
    src: frontend-main.cfg.j2
    dest: "{{ haproxy_config_dir }}{{ item.name }}/00-main.cfg"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ haproxy_frontends }}"
  tags: haproxy, configure, haproxy:configure

- name: Create frontend fragments (acl)
  template:
    src: frontend-acl.cfg.j2
    dest: "{{ haproxy_config_dir }}{{ item.0.name }}/01-{{ item.1.name }}.cfg"
    owner: root
    group: root
    mode: 0644
  with_subelements:
    - "{{ haproxy_frontends|selectattr('acls', 'defined')|list }}"
    - acls
  tags: haproxy, configure, haproxy:configure

- name: Create frontend fragments (backend)
  template:
    src: frontend-backend.cfg.j2
    dest: "{{ haproxy_config_dir }}{{ item.0.name }}/03-{{ item.1.name }}.cfg"
    owner: root
    group: root
    mode: 0644
  with_subelements:
    - "{{ haproxy_frontends|selectattr('backends', 'defined')|list }}"
    - backends
  tags: haproxy, configure, haproxy:configure

- name: Create frontend fragments (extra)
  template:
    src: frontend-extra.cfg.j2
    dest: "{{ haproxy_config_dir }}{{ item.0.name }}/02-extra-{{ item.1|hash('sha1') }}.cfg"
    owner: root
    group: root
    mode: 0644
  with_subelements:
    - "{{ haproxy_frontends|selectattr('extra_params', 'defined')|list }}"
    - extra_params
  tags: haproxy, configure, haproxy:configure

- name: Assemble frontend fragments
  assemble:
    src: "{{ haproxy_config_dir }}{{ item.name }}"
    dest: "{{ haproxy_config_dir }}01-{{ item.name }}.cfg"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ haproxy_frontends }}"
  tags: haproxy, configure, haproxy:configure

- name: Create backend fragments
  template:
    src: backend.cfg.j2
    dest: "{{ haproxy_config_dir }}02-{{ item.name }}.cfg"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ haproxy_backends }}"
  when: haproxy_backends|length > 0
  tags: haproxy, configure, haproxy:configure

- name: Assemble config file
  assemble:
    src: "{{ haproxy_config_dir }}"
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: 0644
  notify: Restart HAProxy
  tags: haproxy, configure, haproxy:configure

- name: Separate log files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  notify: Restart rsyslog
  with_items:
    - { src: rsyslog.conf.j2, dest: /etc/rsyslog.d/49-haproxy.conf }
    - { src: logrotate.j2, dest: /etc/logrotate.d/haproxy }
  tags: haproxy, configure, haproxy:configure

- name: Start and enable HAProxy
  service: name=haproxy state=started enabled=yes
  tags: haproxy, configure, haproxy:configure
